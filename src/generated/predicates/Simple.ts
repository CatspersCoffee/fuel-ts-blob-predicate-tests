/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
  Forc version: 0.66.6
  Fuel-Core version: 0.46.0
*/

import {
  decompressBytecode,
  InputValue,
  Predicate as __Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

export type SimpleConfigurables = Partial<{
    OWNER_ADDRESS: string;
}>;

export type SimpleInputs = [];

export type SimpleParameters = Omit<
  PredicateParams<SimpleInputs, SimpleConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    }
  ],
  "metadataTypes": [],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "OWNER_ADDRESS",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "offset": 4080
    }
  ]
};

const bytecode = decompressBytecode('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');

export class Simple extends __Predicate<
  SimpleInputs,
  SimpleConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: SimpleParameters) {
    super({ abi, bytecode, ...params });
  }
}
